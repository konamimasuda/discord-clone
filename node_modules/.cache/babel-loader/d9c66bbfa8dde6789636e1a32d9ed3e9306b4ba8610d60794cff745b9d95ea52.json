{"ast":null,"code":"var _jsxFileName = \"/Users/konami/Desktop/dev/udemy/discord-clone-udemy/src/components/chat/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Chat.scss\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatMessage from \"./ChatMessage\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport CardGiftcardIcon from \"@mui/icons-material/CardGiftcard\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { collection, addDoc, serverTimestamp, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const channelName = useAppSelector(state => state.channel.channelName);\n  const channelId = useAppSelector(state => state.channel.channelId);\n  const user = useAppSelector(state => state.user.user);\n  useEffect(() => {\n    let collectionRef = collection(db, \"channels\", String(channelId), \"messages\");\n    onSnapshot(collectionRef, snapshot => {\n      let results = [];\n      snapshot.docs.forEach(doc => {\n        results.push({\n          timestamp: doc.data().timestamp,\n          message: doc.data().message,\n          user: doc.data().user\n        });\n      });\n      setMessages(results);\n      console.log(results);\n    });\n  }, [channelId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const collectionRef = collection(db, \"channels\", String(channelId), \"messages\");\n    const docRef = await addDoc(collectionRef, {\n      message: inputText,\n      timestamp: serverTimestamp(),\n      user: user\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: /*#__PURE__*/_jsxDEV(ChatHeader, {\n        channelName: channelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__message\",\n      children: [/*#__PURE__*/_jsxDEV(ChatMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Udemy\\u3078\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u9001\\u4FE1\",\n          onChange: e => setInputText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat__inputbtn\",\n          onClick: e => sendMessage(e),\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__icons\",\n        children: [/*#__PURE__*/_jsxDEV(CardGiftcardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GifIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"EtIdB9D9htzwmykoYOuE1P/lau8=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","ChatHeader","ChatMessage","AddCircleOutlineIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","useAppSelector","collection","addDoc","serverTimestamp","onSnapshot","db","jsxDEV","_jsxDEV","Chat","_s","inputText","setInputText","messages","setMessages","channelName","state","channel","channelId","user","collectionRef","String","snapshot","results","docs","forEach","doc","push","timestamp","data","message","console","log","sendMessage","e","preventDefault","docRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/konami/Desktop/dev/udemy/discord-clone-udemy/src/components/chat/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Chat.scss\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatMessage from \"./ChatMessage\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport CardGiftcardIcon from \"@mui/icons-material/CardGiftcard\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport {\n  collection,\n  CollectionReference,\n  DocumentReference,\n  DocumentData,\n  addDoc,\n  serverTimestamp,\n  onSnapshot,\n  Timestamp,\n} from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\n\ninterface Mesages {\n  timestamp: Timestamp;\n  message: string;\n  user: {\n    uid: string;\n    photo: string;\n    email: string;\n    displayName: string;\n  };\n}\n\nconst Chat = () => {\n  const [inputText, setInputText] = useState<string>(\"\");\n  const [messages, setMessages] = useState<Mesages[]>([]);\n  const channelName = useAppSelector((state) => state.channel.channelName);\n  const channelId = useAppSelector((state) => state.channel.channelId);\n  const user = useAppSelector((state) => state.user.user);\n\n  useEffect(() => {\n    let collectionRef = collection(\n      db,\n      \"channels\",\n      String(channelId),\n      \"messages\"\n    );\n\n    onSnapshot(collectionRef, (snapshot) => {\n      let results: Mesages[] = [];\n      snapshot.docs.forEach((doc) => {\n        results.push({\n          timestamp: doc.data().timestamp,\n          message: doc.data().message,\n          user: doc.data().user,\n        });\n      });\n      setMessages(results);\n      console.log(results);\n    });\n  }, [channelId]);\n\n  const sendMessage = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n\n    const collectionRef: CollectionReference<DocumentData> = collection(\n      db,\n      \"channels\",\n      String(channelId),\n      \"messages\"\n    );\n\n    const docRef: DocumentReference<DocumentData> = await addDoc(\n      collectionRef,\n      {\n        message: inputText,\n        timestamp: serverTimestamp(),\n        user: user,\n      }\n    );\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <ChatHeader channelName={channelName} />\n      </div>\n      <div className=\"chat__message\">\n        <ChatMessage />\n        <ChatMessage />\n        <ChatMessage />\n        <ChatMessage />\n      </div>\n      <div className=\"chat__input\">\n        <AddCircleOutlineIcon />\n        <form className=\"chat__form\">\n          <input\n            type=\"text\"\n            placeholder=\"Udemyへメッセージを送信\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setInputText(e.target.value)\n            }\n          />\n          <button\n            type=\"submit\"\n            className=\"chat__inputbtn\"\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n              sendMessage(e)\n            }\n          >\n            送信\n          </button>\n        </form>\n        <div className=\"chat__icons\">\n          <CardGiftcardIcon />\n          <GifIcon />\n          <EmojiEmotionsIcon />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SACEC,UAAU,EAIVC,MAAM,EACNC,eAAe,EACfC,UAAU,QAEL,oBAAoB;AAC3B,SAASC,EAAE,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAapC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAS,EAAE,CAAC;EACtD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAMqB,WAAW,GAAGd,cAAc,CAAEe,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC;EACxE,MAAMG,SAAS,GAAGjB,cAAc,CAAEe,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACC,SAAS,CAAC;EACpE,MAAMC,IAAI,GAAGlB,cAAc,CAAEe,KAAK,IAAKA,KAAK,CAACG,IAAI,CAACA,IAAI,CAAC;EAEvD1B,SAAS,CAAC,MAAM;IACd,IAAI2B,aAAa,GAAGlB,UAAU,CAC5BI,EAAE,EACF,UAAU,EACVe,MAAM,CAACH,SAAS,CAAC,EACjB,UAAU,CACX;IAEDb,UAAU,CAACe,aAAa,EAAGE,QAAQ,IAAK;MACtC,IAAIC,OAAkB,GAAG,EAAE;MAC3BD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAEC,GAAG,IAAK;QAC7BH,OAAO,CAACI,IAAI,CAAC;UACXC,SAAS,EAAEF,GAAG,CAACG,IAAI,EAAE,CAACD,SAAS;UAC/BE,OAAO,EAAEJ,GAAG,CAACG,IAAI,EAAE,CAACC,OAAO;UAC3BX,IAAI,EAAEO,GAAG,CAACG,IAAI,EAAE,CAACV;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;MACFL,WAAW,CAACS,OAAO,CAAC;MACpBQ,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,MAAMe,WAAW,GAAG,MAClBC,CAAkD,IAC/C;IACHA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMf,aAAgD,GAAGlB,UAAU,CACjEI,EAAE,EACF,UAAU,EACVe,MAAM,CAACH,SAAS,CAAC,EACjB,UAAU,CACX;IAED,MAAMkB,MAAuC,GAAG,MAAMjC,MAAM,CAC1DiB,aAAa,EACb;MACEU,OAAO,EAAEnB,SAAS;MAClBiB,SAAS,EAAExB,eAAe,EAAE;MAC5Be,IAAI,EAAEA;IACR,CAAC,CACF;EACH,CAAC;EAED,oBACEX,OAAA;IAAK6B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB9B,OAAA;MAAK6B,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3B9B,OAAA,CAACb,UAAU;QAACoB,WAAW,EAAEA;MAAY;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpC,eACNlC,OAAA;MAAK6B,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B9B,OAAA,CAACZ,WAAW;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACflC,OAAA,CAACZ,WAAW;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACflC,OAAA,CAACZ,WAAW;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACflC,OAAA,CAACZ,WAAW;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX,eACNlC,OAAA;MAAK6B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9B,OAAA,CAACX,oBAAoB;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxBlC,OAAA;QAAM6B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC1B9B,OAAA;UACEmC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,6DAAgB;UAC5BC,QAAQ,EAAGX,CAAsC,IAC/CtB,YAAY,CAACsB,CAAC,CAACY,MAAM,CAACC,KAAK;QAC5B;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACD,eACFlC,OAAA;UACEmC,IAAI,EAAC,QAAQ;UACbN,SAAS,EAAC,gBAAgB;UAC1BW,OAAO,EAAGd,CAAkD,IAC1DD,WAAW,CAACC,CAAC,CACd;UAAAI,QAAA,EACF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ,eACPlC,OAAA;QAAK6B,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B9B,OAAA,CAACV,gBAAgB;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACpBlC,OAAA,CAACT,OAAO;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACXlC,OAAA,CAACR,iBAAiB;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAChC,EAAA,CA1FID,IAAI;EAAA,QAGYR,cAAc,EAChBA,cAAc,EACnBA,cAAc;AAAA;AAAAgD,EAAA,GALvBxC,IAAI;AA4FV,eAAeA,IAAI;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
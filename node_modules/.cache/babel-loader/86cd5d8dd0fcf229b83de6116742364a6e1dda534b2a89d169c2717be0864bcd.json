{"ast":null,"code":"import _regeneratorRuntime from\"/Users/konami/Desktop/dev/udemy/discord-clone-udemy/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/konami/Desktop/dev/udemy/discord-clone-udemy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/konami/Desktop/dev/udemy/discord-clone-udemy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"./Chat.scss\";import ChatHeader from\"./ChatHeader\";import ChatMessage from\"./ChatMessage\";import AddCircleOutlineIcon from\"@mui/icons-material/AddCircleOutline\";import CardGiftcardIcon from\"@mui/icons-material/CardGiftcard\";import GifIcon from\"@mui/icons-material/Gif\";import EmojiEmotionsIcon from\"@mui/icons-material/EmojiEmotions\";import{useAppSelector}from\"../../app/hooks\";import{collection,addDoc,serverTimestamp}from\"firebase/firestore\";import{db}from\"../../firebase\";import useSubCollection from\"../../hooks/useSubCollection\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chat=function Chat(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var channelId=useAppSelector(function(state){return state.channel.channelId;});var channelName=useAppSelector(function(state){return state.channel.channelName;});var user=useAppSelector(function(state){return state.user.user;});var _useSubCollection=useSubCollection(\"channels\",\"messages\"),messages=_useSubCollection.subDocuments;var sendMessage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var collectionRef,docRef;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();collectionRef=collection(db,\"channels\",String(channelId),\"messages\");_context.next=4;return addDoc(collectionRef,{message:inputText,timestamp:serverTimestamp(),user:user});case 4:docRef=_context.sent;setInputText(\"\");case 6:case\"end\":return _context.stop();}},_callee);}));return function sendMessage(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat__header\",children:/*#__PURE__*/_jsx(ChatHeader,{channelName:channelName})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat__message\",children:messages.map(function(message,index){return/*#__PURE__*/_jsx(ChatMessage,{message:message.message,timestamp:message.timestamp,user:message.user},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__input\",children:[/*#__PURE__*/_jsx(AddCircleOutlineIcon,{}),/*#__PURE__*/_jsxs(\"form\",{className:\"chat__form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u9001\\u4FE1\\u3059\\u308B\",onChange:function onChange(e){return setInputText(e.target.value);},value:inputText}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"chat__inputbtn\",onClick:function onClick(e){return sendMessage(e);},children:\"\\u9001\\u4FE1\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__icons\",children:[/*#__PURE__*/_jsx(CardGiftcardIcon,{}),/*#__PURE__*/_jsx(GifIcon,{}),/*#__PURE__*/_jsx(EmojiEmotionsIcon,{})]})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","ChatHeader","ChatMessage","AddCircleOutlineIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","useAppSelector","collection","addDoc","serverTimestamp","db","useSubCollection","jsx","_jsx","jsxs","_jsxs","Chat","_useState","_useState2","_slicedToArray","inputText","setInputText","channelId","state","channel","channelName","user","_useSubCollection","messages","subDocuments","sendMessage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","collectionRef","docRef","wrap","_callee$","_context","prev","next","preventDefault","String","message","timestamp","sent","stop","_x","apply","arguments","className","children","map","index","type","placeholder","onChange","target","value","onClick"],"sources":["/Users/konami/Desktop/dev/udemy/discord-clone-udemy/src/components/chat/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Chat.scss\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatMessage from \"./ChatMessage\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport CardGiftcardIcon from \"@mui/icons-material/CardGiftcard\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport {\n  collection,\n  CollectionReference,\n  DocumentReference,\n  DocumentData,\n  addDoc,\n  serverTimestamp,\n  onSnapshot,\n  Timestamp,\n  query,\n  orderBy,\n} from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport useSubCollection from \"../../hooks/useSubCollection\";\n\nconst Chat = () => {\n  const [inputText, setInputText] = useState<string>(\"\");\n  const channelId = useAppSelector((state) => state.channel.channelId);\n  const channelName = useAppSelector((state) => state.channel.channelName);\n  const user = useAppSelector((state) => state.user.user);\n  const { subDocuments: messages } = useSubCollection(\"channels\", \"messages\");\n\n  const sendMessage = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n\n    const collectionRef: CollectionReference<DocumentData> = collection(\n      db,\n      \"channels\",\n      String(channelId),\n      \"messages\"\n    );\n\n    const docRef: DocumentReference<DocumentData> = await addDoc(\n      collectionRef,\n      {\n        message: inputText,\n        timestamp: serverTimestamp(),\n        user: user,\n      }\n    );\n    setInputText(\"\");\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <ChatHeader channelName={channelName} />\n      </div>\n      <div className=\"chat__message\">\n        {messages.map((message, index) => (\n          <ChatMessage\n            key={index}\n            message={message.message}\n            timestamp={message.timestamp}\n            user={message.user}\n          />\n        ))}\n      </div>\n      <div className=\"chat__input\">\n        <AddCircleOutlineIcon />\n        <form className=\"chat__form\">\n          <input\n            type=\"text\"\n            placeholder=\"メッセージを送信する\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setInputText(e.target.value)\n            }\n            value={inputText}\n          />\n          <button\n            type=\"submit\"\n            className=\"chat__inputbtn\"\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n              sendMessage(e)\n            }\n          >\n            送信\n          </button>\n        </form>\n        <div className=\"chat__icons\">\n          <CardGiftcardIcon />\n          <GifIcon />\n          <EmojiEmotionsIcon />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
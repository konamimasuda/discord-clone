{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { onSnapshot, collection, query, orderBy } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useAppSelector } from \"../app/hooks\";\nconst useSubCollection = (collectionName, subCollectionName) => {\n  _s();\n  const channelId = useAppSelector(state => state.channel.channelId);\n  const [subDocuments, setSubDocuments] = useState([]);\n  useEffect(() => {\n    let collectionRef = collection(db, collectionName, String(channelId), subCollectionName);\n    const collectionRefOrderBy = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n    onSnapshot(collectionRefOrderBy, snapshot => {\n      let results = [];\n      snapshot.docs.forEach(doc => {\n        results.push({\n          timestamp: doc.data().timestamp,\n          message: doc.data().message,\n          user: doc.data().user\n        });\n      });\n      setSubDocuments(results);\n    });\n  }, [channelId]);\n  return {\n    subDocuments\n  };\n};\n_s(useSubCollection, \"BA8TBtXWXRKZN5dlr2sjMNouG5M=\", false, function () {\n  return [useAppSelector];\n});\nexport default useSubCollection;","map":{"version":3,"names":["useState","useEffect","onSnapshot","collection","query","orderBy","db","useAppSelector","useSubCollection","collectionName","subCollectionName","_s","channelId","state","channel","subDocuments","setSubDocuments","collectionRef","String","collectionRefOrderBy","snapshot","results","docs","forEach","doc","push","timestamp","data","message","user"],"sources":["/Users/konami/Desktop/dev/udemy/discord-clone-udemy/src/hooks/useSubCollection.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  onSnapshot,\n  collection,\n  query,\n  DocumentData,\n  Query,\n  orderBy,\n  Timestamp,\n} from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useAppSelector } from \"../app/hooks\";\n\ninterface Messages {\n  timestamp: Timestamp;\n  message: string;\n  user: {\n    uid: string;\n    photo: string;\n    email: string;\n    displayName: string;\n  };\n}\n\nconst useSubCollection = (\n  collectionName: string,\n  subCollectionName: string\n) => {\n  const channelId = useAppSelector((state) => state.channel.channelId);\n  const [subDocuments, setSubDocuments] = useState<Messages[]>([]);\n  useEffect(() => {\n    let collectionRef = collection(\n      db,\n      collectionName,\n      String(channelId),\n      subCollectionName\n    );\n\n    const collectionRefOrderBy = query(\n      collectionRef,\n      orderBy(\"timestamp\", \"desc\")\n    );\n\n    onSnapshot(collectionRefOrderBy, (snapshot) => {\n      let results: Messages[] = [];\n      snapshot.docs.forEach((doc) => {\n        results.push({\n          timestamp: doc.data().timestamp,\n          message: doc.data().message,\n          user: doc.data().user,\n        });\n      });\n      setSubDocuments(results);\n    });\n  }, [channelId]);\n  return { subDocuments };\n};\n\nexport default useSubCollection;\n"],"mappings":";AAAA,SAAgBA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,UAAU,EACVC,UAAU,EACVC,KAAK,EAGLC,OAAO,QAEF,oBAAoB;AAC3B,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,cAAc,QAAQ,cAAc;AAa7C,MAAMC,gBAAgB,GAAGA,CACvBC,cAAsB,EACtBC,iBAAyB,KACtB;EAAAC,EAAA;EACH,MAAMC,SAAS,GAAGL,cAAc,CAAEM,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC;EACpE,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAa,EAAE,CAAC;EAChEC,SAAS,CAAC,MAAM;IACd,IAAIgB,aAAa,GAAGd,UAAU,CAC5BG,EAAE,EACFG,cAAc,EACdS,MAAM,CAACN,SAAS,CAAC,EACjBF,iBAAiB,CAClB;IAED,MAAMS,oBAAoB,GAAGf,KAAK,CAChCa,aAAa,EACbZ,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAC7B;IAEDH,UAAU,CAACiB,oBAAoB,EAAGC,QAAQ,IAAK;MAC7C,IAAIC,OAAmB,GAAG,EAAE;MAC5BD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAEC,GAAG,IAAK;QAC7BH,OAAO,CAACI,IAAI,CAAC;UACXC,SAAS,EAAEF,GAAG,CAACG,IAAI,EAAE,CAACD,SAAS;UAC/BE,OAAO,EAAEJ,GAAG,CAACG,IAAI,EAAE,CAACC,OAAO;UAC3BC,IAAI,EAAEL,GAAG,CAACG,IAAI,EAAE,CAACE;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;MACFb,eAAe,CAACK,OAAO,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,EAAE,CAACT,SAAS,CAAC,CAAC;EACf,OAAO;IAAEG;EAAa,CAAC;AACzB,CAAC;AAACJ,EAAA,CAhCIH,gBAAgB;EAAA,QAIFD,cAAc;AAAA;AA8BlC,eAAeC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
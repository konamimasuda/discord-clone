{"ast":null,"code":"var _jsxFileName = \"/Users/konami/Desktop/dev/udemy/discord-clone-udemy/src/components/chat/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Chat.scss\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatMessage from \"./ChatMessage\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport CardGiftcardIcon from \"@mui/icons-material/CardGiftcard\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport useSubCollection from \"../../hooks/useSubCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const channelId = useAppSelector(state => state.channel.channelId);\n  const channelName = useAppSelector(state => state.channel.channelName);\n  const user = useAppSelector(state => state.user.user);\n  const {\n    subDocuments: messages\n  } = useSubCollection(\"channels\", \"messages\");\n  const sendMessage = async e => {\n    e.preventDefault();\n    const collectionRef = collection(db, \"channels\", String(channelId), \"messages\");\n    const docRef = await addDoc(collectionRef, {\n      message: inputText,\n      timestamp: serverTimestamp(),\n      user: user\n    });\n    setInputText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: /*#__PURE__*/_jsxDEV(ChatHeader, {\n        channelName: channelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__message\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message.message,\n        timestamp: message.timestamp,\n        user: message.user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u9001\\u4FE1\\u3059\\u308B\",\n          onChange: e => setInputText(e.target.value),\n          value: inputText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat__inputbtn\",\n          onClick: e => sendMessage(e),\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__icons\",\n        children: [/*#__PURE__*/_jsxDEV(CardGiftcardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GifIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"vUs1S8ivD6VetbQNr4SUKyXioCY=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useSubCollection];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","ChatHeader","ChatMessage","AddCircleOutlineIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","useAppSelector","collection","addDoc","serverTimestamp","db","useSubCollection","jsxDEV","_jsxDEV","Chat","_s","inputText","setInputText","channelId","state","channel","channelName","user","subDocuments","messages","sendMessage","e","preventDefault","collectionRef","String","docRef","message","timestamp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/konami/Desktop/dev/udemy/discord-clone-udemy/src/components/chat/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Chat.scss\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatMessage from \"./ChatMessage\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport CardGiftcardIcon from \"@mui/icons-material/CardGiftcard\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport {\n  collection,\n  CollectionReference,\n  DocumentReference,\n  DocumentData,\n  addDoc,\n  serverTimestamp,\n  onSnapshot,\n  Timestamp,\n  query,\n  orderBy,\n} from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport useSubCollection from \"../../hooks/useSubCollection\";\n\nconst Chat = () => {\n  const [inputText, setInputText] = useState<string>(\"\");\n  const channelId = useAppSelector((state) => state.channel.channelId);\n  const channelName = useAppSelector((state) => state.channel.channelName);\n  const user = useAppSelector((state) => state.user.user);\n  const { subDocuments: messages } = useSubCollection(\"channels\", \"messages\");\n\n  const sendMessage = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n\n    const collectionRef: CollectionReference<DocumentData> = collection(\n      db,\n      \"channels\",\n      String(channelId),\n      \"messages\"\n    );\n\n    const docRef: DocumentReference<DocumentData> = await addDoc(\n      collectionRef,\n      {\n        message: inputText,\n        timestamp: serverTimestamp(),\n        user: user,\n      }\n    );\n    setInputText(\"\");\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <ChatHeader channelName={channelName} />\n      </div>\n      <div className=\"chat__message\">\n        {messages.map((message, index) => (\n          <ChatMessage\n            key={index}\n            message={message.message}\n            timestamp={message.timestamp}\n            user={message.user}\n          />\n        ))}\n      </div>\n      <div className=\"chat__input\">\n        <AddCircleOutlineIcon />\n        <form className=\"chat__form\">\n          <input\n            type=\"text\"\n            placeholder=\"メッセージを送信する\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setInputText(e.target.value)\n            }\n            value={inputText}\n          />\n          <button\n            type=\"submit\"\n            className=\"chat__inputbtn\"\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n              sendMessage(e)\n            }\n          >\n            送信\n          </button>\n        </form>\n        <div className=\"chat__icons\">\n          <CardGiftcardIcon />\n          <GifIcon />\n          <EmojiEmotionsIcon />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}